---
title: "Session 4: Basic Git workflow"
date: 2024-04-29
format: revealjs
metadata-files:
  - _slides.yml
---

# Admin

## {{< fa circle-question >}} How can I download the slides as PDF?

Instructions can now be found above the slides on the course website:

{{< include _print-to-pdf.qmd >}}

## {{< fa circle-question >}} When do I have to "Take the quiz"?

- Many chapters contain a "Take the quiz!" button
- These are the same quizzes that we assign to your as part of the sessions' learning objectives
- TL;DR: Take the quiz when we tell you

{{< fa display >}} [lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html](https://lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html)

```{=html}
<iframe width="100%" height="60%" src="https://lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html" style="border:2px solid black;" title="Version Control Book"></iframe>
```

## {{< fa circle-question >}} Will we also learn about Python or R?

- No, not directly, but you are free to use Git to track Python or R files that you use for other projects
- We will have a [Quarto](https://quarto.org/) workshop in two weeks:

```{=html}
<iframe width="100%" height="75%" src="https://quarto.org/" style="border:2px solid black;" title="Quarto website"></iframe>
```

## More questions from last week

::: fragment
#### {{< fa circle-question >}} *"Where can I find an overview of all the commands we learned about?"*

See the **Cheatsheet** section at the end of each chapter in the Version Control Book.
:::

::: fragment
#### {{< fa circle-question >}} *"How can I enable copy-paste in Git Bash?"*

1.    Click on the Git Bash icon in the top-left corner.
1.    Choose **Options**.
1.    Go to **Keys menu**.
1.    Enable Copy and Paste (Ctrl/Shift + Ins) option.
1.    Click **Apply and Save**.
:::

::: fragment
#### {{< fa circle-question >}} *"How do I find the `Users` folder on Windows?"*
- Use `~`
- If `pwd` is at `/:` you can still use `cd C:`
:::

::: fragment
#### {{< fa circle-question >}} *"What should my `recipes` folder look like?"*
At least, a folder with `recipes.txt` inside with at least one commit.
:::

# Last week: Setup and first steps with Git

## Schedule

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
create_schedule()
```

## Last week: Setup and first steps with Git

{{< fa display >}} [lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html](https://lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html)
```{=html}
<iframe width="100%" height="80%" src="https://lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html" title="Version Control Book"></iframe>
```

## Last and this week's learning objectives

::: fragment
### Setup

{{< include ../objectives/_objectives-setup.qmd >}}
:::

::: fragment
### First steps with Git

{{< include ../objectives/_objectives-firststeps.qmd >}}
:::

::: fragment
Note: These are the learning objectives for this and next week.
:::

## Staging and Committing

::: columns
::: {.column width="50%"}
### Staging:

-   Command: `git add`
-   Purpose: Preparing and organizing files before they are recorded in the repository's history.
:::

::: {.column width="50%"}
### Committing:

-   Command: `git commit -m "commit message"`
-   Purpose: Saving the changes in the staged files to the repository's history, creating a snapshot.
:::
:::

::: fragment
![Source: [git-scm.com](https://git-scm.com/book/en/v2)](../images/git-staging-diagram.png){width="500"}
:::

## `git log`

::: fragment
``` bash
git log
```

e.g:
:::

::: columns
::: {.column width="50%"}
::: fragment
``` bash

commit 3f6db14ed93d6e92a207a9a3ac5f8b8c5c5c5c34 (HEAD -> main, origin/master, origin/HEAD)
Author: Jane Doe <jane@example.com>
Date:   Tue Apr 24 14:24:48 2024 -0700

    Fix the widget rendering issue in the dashboard

commit a4324f44d3e85723a4d91cb9e07132b7115e4941
Author: John Smith <john@example.com>
Date:   Mon Apr 23 16:17:59 2024 -0700

    Update dependencies to newer versions

commit fa204b9145bf7fc7ff226a26b49a567fc2eb1b94
Author: Alice Johnson <alice@example.com>
Date:   Sun Apr 22 15:08:43 2024 -0700

    Initial commit of project files
```
:::
:::

::: {.column width="50%"}
::: fragment
``` bash

commit b9690b287bdfec6e17af39b7337b84e9ebf6f046
Author: Lennart Wittkuhn <lennart.wittkuhn@tutanota.com>
Date:   Fri Mar 22 15:19:43 2024 +0100

    move illustration of bad git commits (xkcd comic) and edit sentence

commit d8d770dd84cd19086f41d8d38752b223c8130859
Author: konradpa <konrad@pagenstedt.de>
Date:   Wed Mar 6 13:51:13 2024 +0100

    add image to setup chapter

commit 074c9f6e12dd5fc8cc61de9f31efbdbce41a7583
Author: konradpa <konrad@pagenstedt.de>
Date:   Wed Mar 6 13:51:07 2024 +0100

    add image to rewriting history chapter
```
:::
:::
:::

## Terminology: What are "branches"?

See next week!

{{< fa display >}} [lennartwittkuhn.com/version-control-book/chapters/branches.html](https://lennartwittkuhn.com/version-control-book/chapters/branches.html)

```{=html}
<iframe width="100%" height="75%" src="https://lennartwittkuhn.com/version-control-book/chapters/branches.html" title="Version Control Book"></iframe>
```

## Terminology: What is `HEAD`?

{{< fa display >}} [lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html#head](https://lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html#head)

```{=html}
<iframe width="100%" height="80%" src="https://lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html#head" title="Version Control Book"></iframe>
```

# Live demonstrations

# This week

## Today's chapter

{{< fa display >}} [lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html](https://lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html)

```{=html}
<iframe width="100%" height="80%" src="https://lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html#logging-commits" title="Version Control Book"></iframe>
```

## Your turn

::: incremental
1.  {{< fa book-open >}} **Content Review**: Read the chapter ["First steps with Git"](https://lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html) in the Version Control Book. Start at "Logging commits"
2.  {{< fa laptop-code >}} **Implementation**: Try out the commands in the chapter! Play around! Have fun!
3.  **Note:** We will do the implementation exercises in class together, step-by-step.
4.  {{< fa dumbbell >}} **Exercises**: Complete the exercises in the [survey](https://version-control-basics.formr.org/).
:::

::: fragment
Ask questions!

Let's *git* started!
:::

## Implementation Exercises

::: fragment
:memo: make at least 3 commit in `recipes.txt`
:::

::: fragment
:memo: make one commit using ``` git --amend`` - add a recipe without title - add title - use ```git commit --amend\` to add the title change to the same commit
:::

::: fragment
:memo: create a .gitignore file - all mac users: ignore .DS_Store
:::

::: fragment
:memo: complete the [basics](https://version-control-basics.formr.org) quiz
:::

::: fragment
:rocket: Optional: use `.gitkeep` in an otherwise empty directory
:::
