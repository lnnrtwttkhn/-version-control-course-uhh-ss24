---
title: "Session 8: GitHub - Intro"
date: 2024-05-20
format: revealjs
metadata-files:
  - _slides.yml
---

# Schedule

## Schedule

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
create_schedule()
```

# Last Session

## Last session: Quarto Workshop

{{< fa display >}} [https://lennartwittkuhn.com/version-control-course-uhh-ss24/sessions/session06](https://lennartwittkuhn.com/version-control-course-uhh-ss24/sessions/session06)
```{=html}
<iframe width="100%" height="80%" src="https://lennartwittkuhn.com/version-control-course-uhh-ss24/sessions/session06" title="Version Control Book"></iframe>
```

## Last week's questions?

## Important Note: Git repository in user folder?

::: fragment

 - Please make sure that your `recipe` repository is in a suitable place (e.g. desktop, documents...) and **not** e.g. in your user folder

- If this is the case, please **tell Lennart**
 
:::

::: fragment

**Tip:** To prevent ever creating a Git repository inside your user folder, you can use:

```{bash}
touch ~/.git
```

Thanks to [Eamon Caddigan](https://social.coop/@eamon/112434377857903339)

::: 

# This WeekÂ´s topic

## Today's topic: Introduction to GitHub

::: fragment

![Image from [Techdobz](https://medium.com/analytics-vidhya/version-control-using-git-github-ff4c3f7c752e)](../images/git-github-integration.png){width="70%"}
:::

## This weeks learning objectives

::: fragment
`{{< include ../objectives/_objectives-github-intro.qmd >}`
:::


## Today's chapter

{{< fa brands internet-explorer >}} <https://lennartwittkuhn.com/version-control-book/chapters/github-intro.html>

```{=html}
<iframe width="100%" height="80%" src="https://lennartwittkuhn.com/version-control-book/chapters/github-intro.html" title="Version Control Book"></iframe>
```

## Your turn

::: incremental
1.  {{< fa book-open >}} **Content Review**: Read the chapter ["GitHub - Intro"](https://lennartwittkuhn.com/version-control-book/chapters/github-intro.html) in the Version Control Book.
2.  {{< fa laptop-code >}} **Implementation**: Try out the commands in the chapter! Play around! Have fun!.
3.  **Note:** Please complete the implementation exercises on the next slide
:::

::: fragment
Ask questions!

Let's *git* started!
:::

## Implementation Exercises

::: {.columns}
::: {.column width="33%"}
::: fragment
### Upload and Manage Your Repository
- **Upload your repository**:
  1. Create a new private repository on GitHub.
  2. Set the remote URL for your local Git repository.
  3. Push your main branch to GitHub.
- **Manage branches (Optional)**:
  1. Push other branches with changes to GitHub.
  2. Delete unused branches.
  
:::
:::

::: {.column width="33%"}
::: fragment
### Maintain and Collaborate
- **Clean up your repository**:
  1. Delete unnecessary files or add a new recipe.
  2. Commit changes with a message.
  3. Pull the changes to your local repository.
- **Collaboration**:
  1. Add collaborators: Lennart ([\@lnnrtwttkhn](https://github.com/lnnrtwttkhn)) and Konrad ([\@konradpa](https://github.com/konradpa?tab=repositories)).
  
:::
:::

::: {.column width="33%"}
::: fragment
### `README` file

1. Navigate to your repository on GitHub, click "Add file", and select "Create new file".

1. Name the file README.md, add a brief description of your project, and provide a commit message.

1. Click the green "Commit new file" button to save the README file to the repository.

### Fetching and merging

1. Run git fetch to retrieve the latest changes from the remote repository.

1. Run git merge origin/main to merge the fetched changes into your local branch.

1. Verify that your local repository now includes the changes made on GitHub.

:::
:::
::::

## Implementation Exercises (Bonus)

::: fragment

### Cloning and Testing (optional)
- **Clone and sync**:
  1. Clone your repository to a different location.
  2. Make and push changes.
  3. Pull changes to the original repository.
  4. Delete your newly cloned repository.
  
:::
